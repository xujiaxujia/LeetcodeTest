// 一个无序数组，包含正数、负数和0，要求从中找出3个数的乘积，使得乘积最大，要求时间复杂度：O(n)，空间复杂度：O(1)

def biggest_multiply():
    n = int(input())
    if n<3:
        print(False)
    str_input = input()
    alist_input = list(map(int,str_input.split()))
    alist_input.sort()
    if alist_input[0]>=0 or alist_input[-1]<=0 or (alist_input[0]<0 and alist_input[1]>=0):
        print(alist_input[-1]*alist_input[-2]*alist_input[-3]) 
    elif n<=4:
        print(alist_input[0]*alist_input[1]*alist_input[-1])
    else:
        print(alist_input[-1]*max(alist_input[0]*alist_input[1],alist_input[-2]*alist_input[-3]))

if __name__ == "__main__":
    biggest_multiply()
