//执行用时 : 11 ms, 在String to Integer (atoi)的Java提交中击败了65.28% 的用户
//内存消耗 : 36.2 MB, 在String to Integer (atoi)的Java提交中击败了84.57% 的用户
//有效数字
public class Myatoi {
	public static int myAtoi(String str) {
		int ans = 0, final_ans = 0, PorN=1;
		str = str.trim();
		boolean negative = false;
		for (int i = 0; i < str.length(); i++) {
			ans = cut_str(str);
			if (ans != 0) {
				if (str.charAt(i) == '+' || str.charAt(i) == '-') {
					try {
						negative = str.charAt(i)=='-';
						PorN = negative? -1:1;
						final_ans = PorN*Integer.valueOf(str.substring(i + 1, i + ans+1));
					}catch(Exception e) {
						final_ans = negative? Integer.MIN_VALUE:Integer.MAX_VALUE;
					}
					break;
				} else {
					try {
					final_ans = Integer.valueOf(str.substring(i, i + ans));
					}catch(Exception e) {
						final_ans = Integer.MAX_VALUE;
					}
					break;
				}
			}
		}
		return final_ans;
	}
	
	public static int cut_str(String str) {
		int final_len = 0;
		if (str.charAt(0) == '+' || str.charAt(0) == '-') {
			if (str.length()>1 && str.charAt(1) >= '0' && str.charAt(1) <= '9')
				return final_len = cut_str(str.substring(1));
		} else if (str.charAt(0) >= '0' && str.charAt(0) <= '9') {
			int j = 0;
			while (j<str.length() && str.charAt(j) <= '9' && str.charAt(j) >= '0') {
				j++;
				final_len = j;
			}
		}
		return final_len;
	}
